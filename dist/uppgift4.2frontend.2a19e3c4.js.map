{"mappings":"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","sources":["<anon>","src/main.js"],"sourcesContent":["var $2b6e161c9edcf319$exports = {};\n//skapar variablar av knapp elementen i html\nlet $2b6e161c9edcf319$var$openButton = document.getElementById(\"open-menu\");\nlet $2b6e161c9edcf319$var$closeButton = document.getElementById(\"close-menu\");\n//skapar en eventlistener som lyssnar efter när användare klickar på dessa element\n$2b6e161c9edcf319$var$openButton.addEventListener('click', $2b6e161c9edcf319$var$toggleMenu);\n$2b6e161c9edcf319$var$closeButton.addEventListener('click', $2b6e161c9edcf319$var$toggleMenu);\n//function som kollar ifall mobilmenyn visas eller inte när man trycker på respektive knapp, om den inte visas så visas den och vice versa. Den ändrar knappens css ifall display är none till block annars ändras den till none\nfunction $2b6e161c9edcf319$var$toggleMenu() {\n    let mobileMenuEl = document.getElementById(\"mobilemenu\");\n    let style = window.getComputedStyle(mobileMenuEl);\n    if (style.display === \"none\") mobileMenuEl.style.display = \"block\";\n    else mobileMenuEl.style.display = \"none\";\n}\nasync function $2b6e161c9edcf319$var$register() {\n    let user = {\n        username: document.getElementById(\"username\").value,\n        password: document.getElementById(\"password\").value\n    };\n    if (!user.username || !user.password) {\n        const error = document.getElementById(\"errormessage\");\n        error.textContent = \"Du m\\xe5ste fylla i alla f\\xe4lt!\";\n        return;\n    }\n    try {\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json' //anger att det är json som skickas\n            },\n            body: JSON.stringify(user) //user objekt blir json sträng\n        });\n        if (!response.ok) throw new Error(\"N\\xe4tverksproblem - felaktigt svar fr\\xe5n servern\");\n        let data = await response.json();\n        console.log(data);\n        window.location.href = \"index.html\" //redirect till startsida efter lyckad POST\n        ;\n    } catch (error) {\n        console.error('Det uppstod ett fel:', error.message);\n    }\n}\nasync function $2b6e161c9edcf319$var$login() {\n    let user = {\n        username: document.getElementById(\"username\").value,\n        password: document.getElementById(\"password\").value\n    };\n    if (!user.username || !user.password) {\n        const error = document.getElementById(\"errormessage\");\n        error.textContent = \"Du m\\xe5ste fylla i alla f\\xe4lt!\";\n        return;\n    }\n    try {\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json' //anger att det är json som skickas\n            },\n            body: JSON.stringify(user) //user objekt blir json sträng\n        });\n        if (!response.ok) throw new Error(\"N\\xe4tverksproblem - felaktigt svar fr\\xe5n servern\");\n        let data = await response.json();\n        localStorage.setItem('token', data.response.token) //sparar jwt token i localstorage\n        ;\n        console.log(\"token sparad\", data.response.token);\n        console.log(data);\n        let sucessfulLogin = await $2b6e161c9edcf319$var$protected() //anropar protected funktionen och väntar vad den skickar tillbaka\n        ;\n        if (sucessfulLogin) window.location.href = \"protected.html\" //om return va true i protected funktionen redirect till protected webbsida\n        ;\n        else {\n            console.error(\"\\xc5tkomst nekad: token ogiltig eller saknas\");\n            let error = document.getElementById(\"errormessage\");\n            error.textContent = \"Inloggning misslyckades var god f\\xf6rs\\xf6k igen\";\n        }\n    } catch (error) {\n        console.error('Det uppstod ett fel:', error.message);\n    }\n}\nasync function $2b6e161c9edcf319$var$protected() {\n    const token = localStorage.getItem('token') //hämtar token från localstorage\n    ;\n    if (!token) {\n        console.error(\"ingen token hittades\") //om det inte finns någon token skickar error och returnar false\n        ;\n        return false;\n    }\n    try {\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/protected', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token //skickar med token i headers\n            }\n        });\n        if (!response.ok) return false;\n        let data = await response.json();\n        console.log(data);\n        return true //om allt fungerar return true\n        ;\n    } catch (error) {\n        console.error('Det uppstod ett fel:', error.message);\n        return false;\n    }\n}\nconst $2b6e161c9edcf319$var$loginForm = document.querySelector(\".loginform\") //lägger till en preventdefault på formulären så sidan inte laddas om när man klickar submit\n;\nif ($2b6e161c9edcf319$var$loginForm) $2b6e161c9edcf319$var$loginForm.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    $2b6e161c9edcf319$var$login();\n});\nconst $2b6e161c9edcf319$var$registerForm = document.querySelector(\".registerform\");\nif ($2b6e161c9edcf319$var$registerForm) $2b6e161c9edcf319$var$registerForm.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    $2b6e161c9edcf319$var$register();\n});\nasync function $2b6e161c9edcf319$var$protectedData() {\n    const token = localStorage.getItem('token');\n    if (!token) {\n        console.error(\"\\xc5tkomst nekad: Token ogiltig eller saknas\");\n        window.location.href = \"index.html\";\n    }\n    try {\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/protected', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + token //skickar med token i headers\n            }\n        });\n        if (!response.ok) {\n            console.error(\"Fel intr\\xe4ffat token ogiltig eller \\xe5tkomst nekad\");\n            localStorage.removeItem('token');\n            window.location.href = \"index.html\";\n            return;\n        }\n        let data = await response.json();\n        console.log(data);\n        const container = document.getElementById(\"protectedData\") //Ändra DOM för att skriva ut data från fetchen \n        ;\n        const title = document.createElement(\"h2\");\n        title.textContent = \"Lyckad inloggning! V\\xe4lkommen\";\n        const message = document.createElement(\"p\");\n        message.textContent = data.message;\n        container.appendChild(title);\n        container.appendChild(message);\n    } catch (error) {\n        console.error('Det uppstod ett fel:', error.message);\n    }\n}\nif (location.pathname.includes(\"protected.html\")) document.addEventListener(\"DOMContentLoaded\", $2b6e161c9edcf319$var$protectedData);\n\n\n//# sourceMappingURL=uppgift4.2frontend.2a19e3c4.js.map\n","//skapar variablar av knapp elementen i html\r\nlet openButton = document.getElementById(\"open-menu\")\r\nlet closeButton = document.getElementById(\"close-menu\")\r\n\r\n\r\n//skapar en eventlistener som lyssnar efter när användare klickar på dessa element\r\nopenButton.addEventListener('click', toggleMenu)\r\ncloseButton.addEventListener('click', toggleMenu)\r\n//function som kollar ifall mobilmenyn visas eller inte när man trycker på respektive knapp, om den inte visas så visas den och vice versa. Den ändrar knappens css ifall display är none till block annars ändras den till none\r\nfunction toggleMenu(){\r\n    let mobileMenuEl = document.getElementById(\"mobilemenu\")\r\n    let style = window.getComputedStyle(mobileMenuEl)\r\n\r\n    if(style.display === \"none\") {\r\n        mobileMenuEl.style.display = \"block\";\r\n    } else{\r\n        mobileMenuEl.style.display = \"none\"\r\n    }\r\n}\r\n\r\n\r\nasync function register() {                    \r\n    let user = {\r\n        username: document.getElementById(\"username\").value,        //skapar ett objekt med värden från förmuläret\r\n        password: document.getElementById(\"password\").value           \r\n    }\r\n\r\n    if(!user.username || !user.password ){                       //validering om nått fält i förmuläret är tomt return så funktionen stoppas\r\n        const error = document.getElementById(\"errormessage\")\r\n        error.textContent = (\"Du måste fylla i alla fält!\")             \r\n        return                                                         \r\n    }\r\n\r\n    try{\r\n    let response = await fetch('https://uppgift4-1backend.onrender.com/api/register', {       //post förfrågan till api\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'                               //anger att det är json som skickas\r\n    },\r\n        body: JSON.stringify(user)                                         //user objekt blir json sträng\r\n    });\r\n    if (!response.ok){\r\n            throw new Error ('Nätverksproblem - felaktigt svar från servern');\r\n        }\r\n    \r\n    let data = await response.json();\r\n    console.log(data);\r\n    window.location.href =\"index.html\"                                       //redirect till startsida efter lyckad POST\r\n    } catch (error){\r\n        console.error('Det uppstod ett fel:', error.message);\r\n    }\r\n} \r\n\r\nasync function login() {                    \r\n    let user = {\r\n        username: document.getElementById(\"username\").value,        //skapar ett objekt med värden från förmuläret\r\n        password: document.getElementById(\"password\").value           \r\n    }\r\n\r\n    if(!user.username || !user.password ){                       //validering om nått fält i förmuläret är tomt return så funktionen stoppas\r\n        const error = document.getElementById(\"errormessage\")\r\n        error.textContent = (\"Du måste fylla i alla fält!\")             \r\n        return                                                         \r\n    }\r\n\r\n    try{\r\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/login', {       //post förfrågan till api\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'                               //anger att det är json som skickas\r\n        },\r\n            body: JSON.stringify(user)                                         //user objekt blir json sträng\r\n        });\r\n        if (!response.ok){\r\n                throw new Error ('Nätverksproblem - felaktigt svar från servern');\r\n            }\r\n        \r\n        let data = await response.json();\r\n        \r\n        localStorage.setItem('token', data.response.token)                    //sparar jwt token i localstorage\r\n        console.log(\"token sparad\", data.response.token)\r\n        console.log(data)\r\n        \r\n        let sucessfulLogin = await protected()                                //anropar protected funktionen och väntar vad den skickar tillbaka\r\n        if(sucessfulLogin){\r\n            window.location.href = \"protected.html\"                           //om return va true i protected funktionen redirect till protected webbsida\r\n        }else{\r\n            console.error(\"Åtkomst nekad: token ogiltig eller saknas\")\r\n        let error = document.getElementById(\"errormessage\")\r\n        error.textContent = \"Inloggning misslyckades var god försök igen\"\r\n        }\r\n        }catch (error){\r\n        console.error('Det uppstod ett fel:', error.message);\r\n    }\r\n} \r\n\r\n\r\nasync function protected() {                                              //protected funktion med get route som skickar jwt token i headers\r\n    const token = localStorage.getItem('token')                            //hämtar token från localstorage\r\n\r\n    if(!token){\r\n       console.error(\"ingen token hittades\")                              //om det inte finns någon token skickar error och returnar false\r\n       return false;\r\n    }\r\n\r\n    try{\r\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/protected', {\r\n            method: 'GET',\r\n            headers:{\r\n                'Authorization': 'Bearer ' + token                                //skickar med token i headers\r\n            }\r\n        }) \r\n\r\n        if (!response.ok){\r\n            return false\r\n        }\r\n\r\n        let data = await response.json()\r\n        console.log(data)\r\n        return true                                                             //om allt fungerar return true\r\n    }catch(error){\r\n        console.error('Det uppstod ett fel:', error.message)\r\n        return false\r\n    }\r\n}\r\n\r\nconst loginForm = document.querySelector(\".loginform\")                      //lägger till en preventdefault på formulären så sidan inte laddas om när man klickar submit\r\nif(loginForm){\r\n    loginForm.addEventListener(\"submit\", (event) => {\r\n        event.preventDefault()\r\n        login()\r\n    })\r\n}\r\n\r\nconst registerForm = document.querySelector(\".registerform\")\r\nif(registerForm){\r\n    registerForm.addEventListener(\"submit\", (event) => {\r\n        event.preventDefault()\r\n        register()\r\n    })\r\n}\r\n\r\nasync function protectedData(){                                                   //funktion som verifierar att token finns och är giltig annars blir man tillbakaskickad till startsida\r\n    const token = localStorage.getItem('token')\r\n\r\n    if(!token){\r\n        console.error(\"Åtkomst nekad: Token ogiltig eller saknas\")\r\n        window.location.href = \"index.html\"\r\n    }\r\n\r\n    try{\r\n        let response = await fetch('https://uppgift4-1backend.onrender.com/api/protected', {\r\n            method: 'GET',\r\n            headers:{\r\n                'Authorization': 'Bearer ' + token                                //skickar med token i headers\r\n            }\r\n        }) \r\n\r\n        if(!response.ok){\r\n            console.error(\"Fel inträffat token ogiltig eller åtkomst nekad\")\r\n            localStorage.removeItem('token')\r\n            window.location.href = \"index.html\"\r\n            return\r\n        }\r\n\r\n        let data = await response.json()\r\n        console.log(data)\r\n\r\n        const container = document.getElementById(\"protectedData\")                               //Ändra DOM för att skriva ut data från fetchen \r\n        const title = document.createElement(\"h2\")\r\n        title.textContent = (\"Lyckad inloggning! Välkommen\")\r\n        const message = document.createElement(\"p\")   \r\n        message.textContent = data.message\r\n\r\n        container.appendChild(title)\r\n        container.appendChild(message)\r\n        \r\n    }catch(error){\r\n        console.error('Det uppstod ett fel:', error.message)\r\n    }\r\n}\r\n\r\nif(location.pathname.includes(\"protected.html\")){                                                 //då denna funktion ska enbart användas i den skydadde webbsidan anropas den enbart när DOM är färdigladdad i protected.html\r\n    document.addEventListener(\"DOMContentLoaded\", protectedData)\r\n}"],"names":["$2b6e161c9edcf319$var$openButton","document","getElementById","$2b6e161c9edcf319$var$closeButton","$2b6e161c9edcf319$var$toggleMenu","mobileMenuEl","style","window","getComputedStyle","display","$2b6e161c9edcf319$var$register","user","username","value","password","error","textContent","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","location","href","message","$2b6e161c9edcf319$var$login","localStorage","setItem","token","$2b6e161c9edcf319$var$protected","getItem","addEventListener","$2b6e161c9edcf319$var$loginForm","querySelector","event","preventDefault","$2b6e161c9edcf319$var$registerForm","$2b6e161c9edcf319$var$protectedData","removeItem","container","title","createElement","appendChild","pathname","includes"],"version":3,"file":"uppgift4.2frontend.2a19e3c4.js.map"}